
root = https://karlo13.pythonanywhere.com/

/accounts/entrance_key/
	POST:
        int group_id        - opcinalno
		datetime expires_at - opcinalno
		int uses_left       - opcinalno
		--------> 
        returns entrance_code

/accounts/user/
	GET:
		{require admin token}
        ---------> 
        returns user list

	POST:
		string email
		string password
		string username     - opcinalno
		string entrance_code - opcinalno
		--------> 
        returns token

/accounts/token/
	POST:
		string username / email
		string password
		---------> 
        returns token

/accounts/user/<int:pk>/
    GET:
        {require token}
        ---------> 
        returns user info

/accounts/user/<int:pk>/meta_data/
    GET:
        {require token}
        ---------> 
        returns meta data
    
    POST:
        {require token}
        string meta_data (json format)
        ---------> 
        returns  meta data

/accounts/user/<int:pk>/score/
    GET:
        {require token}
        ---------> 
        returns score

    PUT:
        {require token}
        int score
        ---------> 
        returns  score
    
    # path zbroji score na vec postojeci score
    PATCH:
        {require token}
        int score
        ---------> 
        returns  score

/feedback/feedback/
    GET:
        {require token}
        int num         - opcionalno (default 10, zadnjih 10)
        datetime since  - opcionalno
        bool all        - opcionalno (default false)
        ---------> 
        returns feedback list (trenutno vraca samo path do slike, zbog prometa)

    POST:
        {require token}
        string 	image 		(base64 encoded image)
        string  file_name 	(obavezno, jer moram znat ekstenziju)
        string 	objects_data 	(json format)
        string 	message 	- opcionalno
        bool 	is_trusted 	- opcionalno (iskreno nez kad bi ovo koristili)
        ---------> 
        returns  feedback

    # trenutno BLOKIRAN
    DELETE:
        {require token}
        int num         - opcionalno (default 10, zadnjih 10)
        datetime since  - opcionalno
        bool all        - opcionalno (default false)
        ---------> 
        returns feedback list

/feedback/feedback/<int:pk>/
    GET:
        {require token}
        ---------> 
        returns feedback
    
    # trenutno BLOKIRAN
    DELETE:
        {require token}
        ---------> 
        returns msg, status

accounts/group/
    POST:
        {require token}
        string type
        string settings     - opcinalno (json)
        string meta_data    - opcionalno (json)
        ---------> 
        returns  group

accounts/group/<int:pk>/
    GET:
        {require token}
        ---------> 
        returns  group

    PUT:
        {require token}
        string type
        string settings     - (json)
        string meta_data    - (json)
        ---------> 
        returns  group

    DELETE:
        {require token}
        ---------> 
        returns msg, status

accounts/user/<int:pk>/group/
    GET:
        {require token}
        ---------> 
        returns  group_id list [1,2,6,7]

accounts/user/<int:pk>/group/<int:group_id>/
    # ubacuje usera u grupu
    POST:
        {require token}
        int score           - opcionalno
        bool is_moderator   - opcionalno
        ---------> 
        returns msg, status

    # izbacuje usera iz grupe
    DELETE:
        {require token}
        ---------> 
        returns msg, status

    # mijenja score i moderatora
    PUT:
        {require token}
        int score           - opcionalno
        bool is_moderator   - opcionalno
        ---------> 
        returns msg, status

    # dodaje na score
    PATCH:
        {require token}
        int score  
        ---------> 
        returns  msg

accounts/group/<int:pk>/user/
    GET:
        {require token}
        ---------> 
        returns  user_id list [1,2,6,7]



Sve argumente za POST stavljas u body

Kako se stavlja token u header:
request: 
{
    header: {
        'Authorization' : 'Token c3adc59c4fe9477e955d7cc1cbb44fe1'
    },
    body: {
        ...
    }
}